---
import 'lite-youtube-embed/src/lite-yt-embed.css';
import urlMatcher from './matcher';

export interface Props extends astroHTML.JSX.HTMLAttributes {
	id: string;
	poster?: string;
	posterQuality?: 'max' | 'high' | 'default' | 'low';
	params?: string;
	playlabel?: string;
}

const {
	id,
	poster,
	posterQuality = 'default',
	title,
	style,
	...attrs
} = Astro.props as Props;

const idRegExp = /^[A-Za-z0-9-_]+$/;

function extractID(idOrUrl: string) {
	if (idRegExp.test(idOrUrl)) return idOrUrl;
	return urlMatcher(idOrUrl);
}

const videoid = extractID(id);
const posterFile =
	{
		max: 'maxresdefault',
		high: 'sddefault',
		default: 'hqdefault',
		low: 'default',
	}[posterQuality] || 'hqdefault';
const posterURL =
	poster || `https://i.ytimg.com/vi/${videoid}/${posterFile}.jpg`;
const href = `https://youtube.com/watch?v=${videoid}`;

const styles = [];
if (style) styles.push(style);
if (posterURL) styles.push(`background-image: url('${posterURL}')`);
---

<lite-youtube
	{videoid}
	{title}
	data-title={title}
	{...attrs}
	style={styles.join(';')}
>
	<a {href} class="lty-playbtn">
		<span class="lyt-visually-hidden">{attrs.playlabel || 'Play'}</span>
	</a>
</lite-youtube>

<script src="lite-youtube-embed"></script>

<style is:global>
	lite-youtube > iframe {
		all: unset !important;
		width: 100% !important;
		height: 100% !important;
		position: absolute !important;
		inset: 0 !important;
		border: 0 !important;
	}
</style>

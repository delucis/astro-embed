---
import { parseOpenGraph } from './lib';

export interface Props {
  /** URL to fetch Open Graph data. */
  url: string;
}

const { url } = Astro.props as Props;
const meta = await parseOpenGraph(url);
let domain = new URL(meta?.url || '').hostname.replace('www.', '');
---

<div class="social-embed-card">
  <!-- Card image -->
  <div
    class="social-embed-image"
    style=`background-image: url("${meta?.image}");`
  >
  </div>
  <!-- Card contents -->
  <div class="social-embed-contents">
    <div class="social-embed-hostname">
      {domain}
    </div>
    <div>
      <!-- Card title -->
      <div class="social-embed-title">
        {meta?.title}
      </div>
      <!-- Card description -->
      <div class="social-embed-description">
        {meta?.description}
      </div>
    </div>
  </div>
</div>

<style>
  :root {
    --image-width: 400px;
    --image-height: 210px;
    --card-radius: 4px;
  }
  .social-embed-card {
    width: var(--image-width);
    cursor: pointer;
  }
  .social-embed-image {
    height: var(--image-height);
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    border-radius: var(--card-radius) var(--card-radius) 0 0;
  }
  .social-embed-contents {
    padding: 1em;
    user-select: none;
    border: 1px solid lightgray;
    border-radius: 0 0 var(--card-radius) var(--card-radius);
  }
  .social-embed-hostname {
    font-size: smaller;
    text-transform: uppercase;
    color: gray;
  }
  .social-embed-description {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }
  .social-embed-title {
    font-weight: bolder;
  }
</style>

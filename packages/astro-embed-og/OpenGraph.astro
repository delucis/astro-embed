---
import { parseOpenGraph } from './lib';

export interface Props {
	/** URL to fetch Open Graph data. */
	id: string;
	/**
	 * CSS size variables. e.g: '300px', '1em'
	 * Defaults to w = 400px, h = 210px - 1.91:1
	 */
	imageWidth?: string;
	imageHeight?: string;
	/* Whether it is pre-styled or not. Defaults to false. */
	styled: boolean;
}

const {
	id,
	imageWidth = '400px',
	imageHeight = '210px',
	styled = false,
} = Astro.props as Props;

const meta = await parseOpenGraph(id);
let domain = new URL(meta?.url || '').hostname.replace('www.', '');
---

<div class:list={['social-embed-wrapper', { socialEmbedStyled: styled }]}>
	<!-- image -->
	<img class="social-embed-image" src=`${meta?.image}` alt="A bird." />
	<!-- content -->
	<div class="social-embed-contents">
		<!-- domain -->
		<span class="social-embed-hostname">
			{domain}
		</span>
		<!-- title -->
		<div class="social-embed-title">
			{meta?.title}
		</div>
		<!-- description -->
		<p class="social-embed-description">
			{meta?.description}
		</p>
	</div>
</div>

<style define:vars={{ imageWidth, imageHeight }}>
	/* Default styles */
	.social-embed-wrapper {
		cursor: pointer;
		user-select: none;
		width: var(--imageWidth);
	}
	.social-embed-image {
		width: var(--imageWidth);
		height: var(--imageHeight);
	}
	/* If styled */
	.socialEmbedStyled {
		border: 1px solid lightgray;
		border-radius: 8px;
	}
	.socialEmbedStyled .social-embed-image {
		border: 1px solid lightgray;
		border-radius: 8px 8px 0 0;
	}
	.socialEmbedStyled .social-embed-contents {
		padding: 0.75em;
		user-select: none;
	}
	.socialEmbedStyled .social-embed-hostname {
		font-size: smaller;
		text-transform: uppercase;
		color: gray;
	}
	.socialEmbedStyled .social-embed-description {
		display: -webkit-box;
		overflow: hidden;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		text-overflow: ellipsis;
		white-space: normal;
	}
	.socialEmbedStyled .social-embed-title {
		font-weight: bolder;
	}
</style>

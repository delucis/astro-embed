---
import "./styles.css";

interface Props {
  images: Array<{
    thumb: string;
    alt: string | undefined;
  }>;
}

const { images } = Astro.props;
---

<div class="image-grid-container">
  <div class:list={["image-grid", `image-grid--${images.length}`]}>
    {images.map((image) => (
      <div class="image-grid-item">
        <img
          src={image.thumb}
          alt={image.alt || ""}
          loading="lazy"
          decoding="async"
        />
      </div>
    ))}
  </div>
</div>

<style>
.image-grid-container {
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  aspect-ratio: 2/1;
}

.image-grid {
  width: 100%;
  height: 100%;
  display: grid;
  gap: var(--space-xs);
  border-radius: var(--radius-md);
  overflow: hidden;
}

.image-grid-item {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 100%;
  background-color: var(--color-border);
}

.image-grid-item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Single image */
.image-grid--1 {
  grid-template-columns: 1fr;
}

/* Two images */
.image-grid--2 {
  grid-template-columns: repeat(2, 1fr);
}

/* Three images */
.image-grid--3 {
  grid-template-columns: repeat(2, 1fr);
}

.image-grid--3 .image-grid-item:first-child {
  grid-row: span 2;
}

/* Four images */
.image-grid--4 {
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
}
</style>

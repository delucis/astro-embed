---
import { AppBskyEmbedRecord } from '@atproto/api';
import Media from './media.astro';
import { atUriToPostUri, atUriToStarterPackUri } from './utils';

interface Props {
	record: AppBskyEmbedRecord.ViewRecord;
}

const { record } = Astro.props;
const postUrl = atUriToPostUri(record.uri);
---

<a class="post-container" href={atUriToStarterPackUri(record.uri)}>
	<div class="user-info">
		<div class="avatar">
			<img src={record.author.avatar} alt={record.author.displayName} />
		</div>
		<p class="user-text">
			<span class="name">{record.author.displayName}</span>
			<span class="handle">@{record.author.handle}</span>
		</p>
	</div>

	<p class="content">{(record.value as any).text}</p>
	<Media media={record.embeds?.[0]} postUrl={postUrl} compact={true} />
</a>

<style>
	.post-container {
		display: flex;
		flex-direction: column;
		gap: var(--space-xs);
		padding: var(--space-sm);
		border: var(--card-border);
		border-radius: var(--radius-md);
		text-decoration: none;
		color: var(--color-text);
		transition: var(--card-transition);
	}

	.post-container:hover {
		background-color: var(--color-background-hover);
	}

	.user-info {
		display: flex;
		gap: var(--space-xs);
		align-items: center;
	}

	.avatar {
		width: var(--avatar-2xs);
		height: var(--avatar-2xs);
		border-radius: var(--radius-full);
		overflow: hidden;
		background-color: var(--color-border);
		flex-shrink: 0;
	}

	.avatar img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.user-text {
		font-size: var(--font-size-sm);
		margin: 0;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
		color: var(--color-text);
	}

	.name {
		font-weight: var(--font-weight-bold);
		color: var(--color-text);
	}

	.handle {
		color: var(--color-text-secondary);
		margin-left: var(--space-xs);
	}

	.content {
		font-size: var(--font-size-sm);
		color: var(--color-text);
		margin: 0;
		line-height: var(--line-height-normal);
	}
</style>

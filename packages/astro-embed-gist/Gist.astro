---
export interface Props {
  /**
   * Gist url to fetch
   */
  id: string;
  /**
   * Optional file name to fetch, case sensitive
   */
  fileName?: string;
}
const { id, fileName } = Astro.props;
let url = id + '.json';
if (fileName) {
  url += `?file=${fileName}`;
}

async function fetchGist(id: string) {
  try {
    const gistUrl = new URL(url);
    return (await fetch(gistUrl).then((res) => res.json())) as {
      description: string;
      created_at: Date;
      files: string[];
      owner: string;
      stylesheet: string;
      div: string;
    };
  } catch (e) {
    console.error(
      `[error]  astro-embed
         ${e.status} - ${e.statusText}: Failed to fetch gist ${id}`
    );
  }
}
const gist = await fetchGist(id);

// TODO use stylesheet
const stylesheetUrl = gist?.stylesheet;
---

{
  gist && (
    <astro-embed-gist data-cssurl={stylesheetUrl}>
      <p class="gist-embed-description">{gist.description}</p>
      <Fragment set:html={gist.div} />
      <span class="gist-embed-owner">gist by {gist.owner}</span>
    </astro-embed-gist>
  )
}
<style>
  astro-embed-gist {
    display: block;
  }
  .gist-embed-owner {
  }
  .gist-embed-description {
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const gists = document.querySelectorAll('astro-embed-gist');
    gists.forEach((e) => {
      const stylesheetUrl = e.dataset.cssurl;
      const linkElement = document.createElement('link');
      linkElement.href = stylesheetUrl;
      linkElement.rel = 'stylesheet';
      linkElement.type = 'text/css';
      document.head.appendChild(linkElement);
    });
  });
</script>
